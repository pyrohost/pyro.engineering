---
export const prerender = true

import AuthorAvatars from "../../components/AuthorAvatars.astro"
import { getCollection } from "astro:content";
import Base from "../../layouts/Base.astro";
import formatDate from "../../lib/utils/formatDate";
import toSlug from "../../lib/utils/toSlug";
// Components for posts
import h1 from "../../components/posts/h1.astro";
import h2 from "../../components/posts/h2.astro";
import h3 from "../../components/posts/h3.astro";
import h4 from "../../components/posts/h4.astro";
import h5 from "../../components/posts/h5.astro";
import h6 from "../../components/posts/h6.astro";
import a from "../../components/posts/a.astro";
import p from "../../components/posts/p.astro";
import img from "../../components/posts/img.astro";
import ol from "../../components/posts/ol.astro";
import li from "../../components/posts/li.astro";
import Figure from "../../components/posts/figure.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection('posts');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}


	const { entry } = Astro.props;
	const data = entry.data
	const { Content } = await entry.render();
	const formattedDate = formatDate(new Date(data.date))
	const authorCollection = await getCollection('authors')
	const authors = authorCollection.filter((author) => entry.data.authors.includes(author.data.name)).map((author) => author.data)
---

<Base title={entry.data.title} description={entry.data.description} image={entry.data.image} >
<div class="mx-auto max-w-4xl px-8 py-8">
	<h1 class="mb-6 text-4xl font-bold md:text-5xl md:leading-[120%]">
		{data.title}
	</h1>
	<span class="mb-6 text-sm md:text-lg">
		{data.description}
	</span>
	<div class="my-6 border-b border-neutral-700"></div>
		<div class="mb-6 flex flex-wrap items-center gap-4">
			<div class="flex items-center gap-2">

				{ data.authors.length === 1 ? (
					<time class="mr-3 font-medium text-neutral-400">{formattedDate}</time>
					<div class="mr-3 hidden h-4 w-px bg-neutral-700 sm:block"></div>
					<a
						class="flex items-center gap-2.5 hover:underline"
						href={`/team/${toSlug(authors[0].name)}`}
					>
						<img
							src={authors[0].image}
							alt={authors[0].name}
							class="h-8 w-8 rounded-full object-cover"
							width="32"
							height="32"
						/>
						<div class="max-w-[200px] truncate text-neutral-400">
							{authors[0].name}
						</div>
					</a>
				) : (
				<div class="flex flex-wrap items-center gap-4">
						<time class="font-medium text-neutral-400">{formattedDate}</time>
						<div class="hidden h-4 w-px bg-neutral-700 sm:block"></div>
						<AuthorAvatars authors={authors} />
					</div>
				) }
			</div>
		</div>
		{ data.image && (
		<img
			src={data.image}
			alt="Post"
			class="mb-8 h-64 w-full object-cover"
		/>)}
		<article id="article" class="prose prose-invert max-w-none">
			<Content components={{
				h1: h1,
				h2: h2,
				h3: h3,
				h4: h4,
				h5: h5,
				h6: h6,
				p: p,
				a: a,
				figure: Figure,
				ol: ol,
				li: li,
				img: img
			}} />
		</article>

</div>
</Base>